# Azure App Service deployment configuration
# Place this in .github/workflows/ directory for GitHub Actions deployment

name: Deploy to Azure App Service

on:
  push:
    branches: [ main ]
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        cache: 'npm'
    
    - name: Install dependencies
      run: npm ci
    
    - name: Build application
      run: |
        npm run typecheck
        chmod +x build-production.sh start-production.sh
        ./build-production.sh

  # DETACHED: Database deployment disabled
  # Uncomment below to re-enable database deployment when needed
  # deploy-database:
  #   needs: build
  #   uses: ./.github/workflows/azure-dbdeploy.yml
  #   secrets:
  #     DATABASE_URL: ${{ secrets.DATABASE_URL }}
  #     AZURE_POSTGRES_PASSWORD: ${{ secrets.AZURE_POSTGRES_PASSWORD }}

  deploy-application:
    needs: [build]  # Removed deploy-database dependency
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        cache: 'npm'
    
    - name: Install dependencies and build
      run: |
        npm ci
        npm run typecheck
        chmod +x build-production.sh start-production.sh
        ./build-production.sh
    
    - name: Create deployment package
      run: |
        # Create a clean deployment package
        mkdir -p deploy
        cp -r dist deploy/
        cp package.production.json deploy/package.json
        cp start-production.sh deploy/
        cp web.config deploy/
        
        # Install production dependencies for Azure
        cd deploy
        npm install --only=production --no-dev
    
    - name: Deploy to Azure App Service
      uses: azure/webapps-deploy@v2
      with:
        app-name: kidzaimathapp30237
        publish-profile: ${{ secrets.AZURE_PUBLISH_PROFILE }}
        package: deploy
      env:
        DATABASE_URL: ${{ secrets.DATABASE_URL }}
        OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
        SENDGRID_API_KEY: ${{ secrets.SENDGRID_API_KEY }}
        STRIPE_SECRET_KEY: ${{ secrets.STRIPE_SECRET_KEY }}
        NODE_ENV: production
