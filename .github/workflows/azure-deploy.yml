# Azure App Service deployment configuration
# Place this in .github/workflows/ directory for GitHub Actions deployment

name: Deploy to Azure App Service

on:
  push:
    branches: [ main ]
  workflow_dispatch:

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        cache: 'npm'
    
    - name: Install dependencies
      run: npm ci
    
    - name: Build application
      run: |
        npm run typecheck
        chmod +x build-production.sh start-production.sh
        ./build-production.sh
    
    - name: Test database connection
      run: |
        echo "Testing database connection..."
        node -e "
          const { neon } = require('@neondatabase/serverless');
          const sql = neon(process.env.DATABASE_URL);
          sql\`SELECT 1 as test\`.then(result => {
            console.log('‚úÖ Database connection successful:', result);
          }).catch(err => {
            console.log('‚ùå Database connection failed:', err.message);
            process.exit(1);
          });
        "
      env:
        DATABASE_URL: ${{ secrets.DATABASE_URL }}

    - name: Deploy database schema
      run: |
        echo "üîÑ Starting database schema deployment..."
        npm run db:push --force
        echo "‚úÖ Database schema deployment completed"
      env:
        DATABASE_URL: ${{ secrets.DATABASE_URL }}

    - name: Verify tables exist
      run: |
        echo "üîç Verifying tables were created..."
        node -e "
          const { neon } = require('@neondatabase/serverless');
          const sql = neon(process.env.DATABASE_URL);
          
          async function checkTables() {
            try {
              const tables = await sql\`
                SELECT table_name FROM information_schema.tables 
                WHERE table_schema = 'public' 
                AND table_name IN ('mentors', 'teacher_audio_metrics', 'home_section_controls')
              \`;
              console.log('üìä Found tables:', tables.map(t => t.table_name));
              
              if (tables.length === 3) {
                console.log('‚úÖ All required tables exist');
              } else {
                console.log('‚ùå Missing tables - only found:', tables.length);
                process.exit(1);
              }
            } catch (err) {
              console.log('‚ùå Table verification failed:', err.message);
              process.exit(1);
            }
          }
          
          checkTables();
        "
      env:
        DATABASE_URL: ${{ secrets.DATABASE_URL }}
    
    - name: Seed database with sample data
      run: npx tsx server/seed.ts
      env:
        DATABASE_URL: ${{ secrets.DATABASE_URL }}
    
    - name: Create deployment package
      run: |
        # Create a clean deployment package
        mkdir -p deploy
        cp -r dist deploy/
        cp package.production.json deploy/package.json
        cp start-production.sh deploy/
        cp web.config deploy/
        
        # Install production dependencies for Azure
        cd deploy
        npm install --only=production --no-dev
    
    - name: Deploy to Azure App Service
      uses: azure/webapps-deploy@v2
      with:
        app-name: kidzaimathapp30237
        publish-profile: ${{ secrets.AZURE_PUBLISH_PROFILE }}
        package: deploy
